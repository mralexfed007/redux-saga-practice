{"version":3,"sources":["redux/reducers/people/actions.js","redux/reducers/people/index.js","redux/reducers/peopleDetails/actions.js","redux/reducers/peopleDetails/index.js","redux/reducers/index.js","redux/reducers/people/selectors.js","components/PeopleTablePagination.js","components/SearchForm.js","components/PeopleTable.js","pages/App.js","redux/reducers/peopleDetails/selectors.js","pages/Details/Tabs.js","pages/Details/ProfileCard.js","pages/Details/TransportList.js","pages/Details/Details.js","routes.js","redux/sagas/people/index.js","redux/sagas/index.js","redux/index.js","index.js"],"names":["LOAD_USERS","LOAD_USERS_SUCCESS","LOAD_USERS_FAILURE","LOAD_FILTERED_USERS","initialState","page","search","loading","error","data","currentPeopleDetails","LOAD_PEOPLE_DEATAILS","LOAD_PEOPLE_DEATAILS_SUCCESS","LOAD_PEOPLE_DEATAILS_FAILURE","history","createBrowserHistory","initial","rootReducer","combineReducers","app","state","people","action","type","payload","peopleDetails","router","connectRouter","selectPeople","PeopleTablePagination","selectedPage","total","changePage","totalPages","Math","ceil","className","role","disabled","onClick","Array","fill","map","item","idx","index","cn","SearchForm","searchPeople","placeholder","onChange","PeopleTable","useSelector","dispatch","useDispatch","e","target","value","col","results","person","name","birth_year","eye_color","gender","hair_color","height","mass","to","url","replaceAll","count","newPage","App","getDetails","ScrollableTabsButtonForce","films","React","useState","setValue","AppBar","position","color","Tabs","event","newValue","variant","scrollButtons","indicatorColor","textColor","film","Tab","label","title","icon","Box","p","opening_crawl","ProfileCard","properties","List","property","Fragment","ListItem","ListItemText","primary","toUpperCase","slice","secondary","Divider","component","TransportList","transport","toggle","setToggle","button","useStyles","makeStyles","theme","root","margin","spacing","flexGrow","maxWidth","MAIN_ROUTE","PEOPLES_DETAILS_ROUTE","routes","id","path","exact","vehicleProperties","starshipProperties","details","classes","vehicles","starships","Grid","container","alignItems","Button","startIcon","Typography","xs","Card","CardContent","direction","ListItemIcon","vehicle","starship","gutterBottom","align","getRouteConfig","route","find","Routes","props","LoadDataFromArray","LoadSomeDataByPerson","LoadPeopleDetails","LoadPeopleList","LoadFilteredPeopleList","loadUsersOnRouterEnter","peopleSaga","res","isArray","all","link","call","fetch","request","apply","json","homeworld","fork","requestData","join","put","delay","take","LOCATION_CHANGE","matchPath","location","pathname","select","detailsPage","params","takeEvery","takeLatest","rootSaga","sagas","s","spawn","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","routerMiddleware","run","createTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e74f169d.chunk.js","sourcesContent":["export const LOAD_USERS = 'LOAD_USERS';\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS'\nexport const LOAD_USERS_FAILURE = 'LOAD_USERS_FAILURE'\nexport const LOAD_FILTERED_USERS= 'LOAD_FILTERED_USERS'","import { LOAD_USERS, LOAD_USERS_FAILURE, LOAD_USERS_SUCCESS } from \"./actions\";\n\nconst initialState = {\n  page: 1,\n  search: '',\n  loading: false,\n  error: null,\n  data: null,\n  currentPeopleDetails: null\n}\n\nexport default function peopleReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_USERS: {\n      const {page, search} = action.payload;\n\n      return {\n        ...state,\n        loading: true,\n        page,\n        search,\n      }\n    }\n    \n    case LOAD_USERS_SUCCESS: \n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      }\n    \n    case LOAD_USERS_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error:action.payload\n      }\n    }\n  \n    default:\n      return state\n  }\n}","export const LOAD_PEOPLE_DEATAILS = 'LOAD_PEOPLE_DEATAILS'\nexport const LOAD_PEOPLE_DEATAILS_SUCCESS = 'LOAD_PEOPLE_DEATAILS_SUCCESS'\nexport const LOAD_PEOPLE_DEATAILS_FAILURE = 'LOAD_PEOPLE_DEATAILS_FAILURE'","import { LOAD_PEOPLE_DEATAILS, LOAD_PEOPLE_DEATAILS_FAILURE, LOAD_PEOPLE_DEATAILS_SUCCESS } from \"./actions\";\n\nconst initialState = {\n  data: null,\n  error: null,\n  loading: false\n}\n\nexport default function peopleDetailsReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_PEOPLE_DEATAILS:\n      return {\n        ...state,\n        loading: true\n      }\n    \n    case LOAD_PEOPLE_DEATAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload,\n        error: null\n      }\n\n    case LOAD_PEOPLE_DEATAILS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n\n    default:\n      return state\n  }\n}","import {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport peopleReducer from './people';\nimport peopleDetailsReducer from './peopleDetails';\n\nexport const history = createBrowserHistory();\n\nconst initial = {};\n\nexport function appReducer(state = initial, action) {\n  return state;\n}\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  people: peopleReducer,\n  peopleDetails: peopleDetailsReducer,\n  router: connectRouter(history),\n})\n\nexport default rootReducer;","export const selectPeople = state => state.people;","import cn from 'classnames';\nconst LIMIT = 10;\n\nexport default function PeopleTablePagination({\n  selectedPage = 1,\n  total = 90,\n  changePage = () => {}\n}) {\n  const totalPages = Math.ceil( total / LIMIT)\n\n  return (\n    <nav className='pagination is-centered' role='navigation' aria-label='pagination'>\n    <button\n      className='pagination-previous'\n      disabled={selectedPage === 1}\n      onClick={() => changePage(selectedPage - 1)}\n    >\n      Previous\n    </button>\n    <button\n      className='pagination-next'\n      disabled={selectedPage === totalPages}\n      onClick={() => changePage(selectedPage + 1)}\n    >\n      Next page\n    </button>\n    <ul className='pagination-list'>\n      {new Array(totalPages).fill(1).map((item, idx) => item + idx).map((page, index) => (\n        <li key={index}>\n          <button\n            className={cn('pagination-link', {\n              'is-current': selectedPage  === page\n            })}\n            aria-label={`Goto page ${selectedPage + 1}`}\n            onClick={() => {\n              if (page !== selectedPage) changePage(page)\n            }}\n          >\n            {page}\n          </button>\n        </li>\n      ))}\n  </ul>\n</nav>\n  )\n}","export default function SearchForm({searchPeople}) {\n  return (\n    <div className=\"field\">\n      <label className=\"label\">Username</label>\n      <div className=\"control has-icons-left has-icons-right\">\n        <input className=\"input\" type=\"text\" placeholder=\"Search people ...\" onChange={searchPeople} />\n        <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-jedi\"></i>\n        </span>\n        <span className=\"icon is-small is-right\">\n          <i className=\"fas fa-search\"></i>\n        </span>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { LOAD_FILTERED_USERS, LOAD_USERS } from \"../redux/reducers/people/actions\";\nimport { selectPeople } from \"../redux/reducers/people/selectors\";\nimport PeopleTablePagination from \"./PeopleTablePagination\";\nimport SearchForm from \"./SearchForm\";\n\nexport default function PeopleTable() {\n  const tableHead = ['Name', 'Birth year', 'Eye color', 'Gender', 'Hair color', 'Height', 'Mass', '']\n  const people = useSelector(selectPeople);\n  const dispatch = useDispatch();\n  const changePage = (newPage) => dispatch({\n    type: LOAD_USERS,\n    payload: {\n      page: newPage,\n      search: people.search,\n    }\n  })\n\n  function search(e) {\n      dispatch({\n        type: LOAD_FILTERED_USERS,\n        payload: {\n          page: 1,\n          search: e.target.value,\n        }\n    })\n}\n\n  return (\n    <>\n      <h1 className=\"title is-3 center\" text-align=\"center\"> Star Wars People</h1>\n      < SearchForm searchPeople={search} />\n      {people.loading\n        ? (\n          <div>\n            Loading...\n          </div>\n          )\n        : (\n          <table className=\"table is-striped is-fullwidth\">\n            <thead>\n              <tr>\n                {tableHead.map(col => (\n                  <th\n                    key={col}\n                  >\n                    {col}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {people.data?.results?.map(person => (\n                <tr key={person.name}>\n                  <td>{person.name}</td>\n                  <td>{person.birth_year}</td>\n                  <td>{person.eye_color}</td>\n                  <td>{person.gender}</td>\n                  <td>{person.hair_color}</td>\n                  <td>{person.height}</td>\n                  <td>{person.mass}</td>\n                  <td>\n                    \n                      <Link to={`/people/${person.url.replaceAll(/\\D/g, '')}`}>\n                        <button className=\"button is-link is-light\">\n                          Details\n                        </button>\n                      </Link>\n                    \n                  </td>\n                </tr>\n                \n              ))}\n            </tbody>\n          </table>\n        )\n      }\n      <PeopleTablePagination selectedPage={people.page} total={people.data?.count} changePage={changePage}/>\n    </>\n  );\n};\n","import React from \"react\";\nimport PeopleTable from \"../components/PeopleTable\";\n\n\nfunction App() {\n  return (\n    <PeopleTable />\n  );\n}\n\nexport default App;","export const getDetails = state => state.peopleDetails;\nexport const getPerson = state => state.peopleDetails.data;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport Box from '@material-ui/core/Box';\n\nexport default function ScrollableTabsButtonForce({films}) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"transparent\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"scrollable force tabs example\"\n        >\n          {films.map((film, index) => (\n            <Tab key={index} label={film.data.title} icon={<MovieIcon />} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <Box p={3}>\n        {films[value].data.opening_crawl}\n      </Box>\n    </div>\n  );\n}","import React from 'react';\nimport {List, ListItem, ListItemText, Divider} from '@material-ui/core';\n\nexport function ProfileCard({properties, data}) {\n  \n  return (\n    <List>\n      {properties.map((property, index) => (\n        <React.Fragment key={index}>\n          <ListItem>\n            <ListItemText primary={property[0].toUpperCase() + property.slice(1)} secondary={data[property]} />\n          </ListItem>\n          <Divider component=\"li\" />\n        </React.Fragment>\n      ))}\n    </List>\n  )\n}","import { ListItem, ListItemText } from '@material-ui/core';\nimport React, {useState} from 'react';\nimport cn from 'classnames';\nimport { ProfileCard } from './ProfileCard';\n\nexport function TransportList({transport, properties}) {\n  const [toggle, setToggle] = useState(false)\n\n  return (\n    <ListItem button>\n      <ListItemText primary={transport.data.name} onClick={() => setToggle(!toggle)} />\n      <div className={cn('modal', {\n        'is-active': toggle\n      })}>\n        <div className=\"modal-background\" onClick={() => setToggle(!toggle)}></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">Modal title</p>\n            <button className=\"delete\" aria-label=\"close\" onClick={() => setToggle(!toggle)}></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <ProfileCard properties={properties} data={transport.data}/>\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button className=\"button is-success\" onClick={() => setToggle(!toggle)}>Ok</button>\n          </footer>\n        </div>\n      </div>\n    </ListItem>\n  )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { Button, Card, CardContent, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\nimport { getDetails } from '../../redux/reducers/peopleDetails/selectors';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ScrollableTabsButtonForce from './Tabs';\nimport { ProfileCard } from './ProfileCard';\nimport { TransportList } from './TransportList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n    maxWidth: 800,\n  }\n}));\n\nexport default function Details() {\n  const vehicleProperties = ['name', 'model', 'manufacturer', 'length', 'max_atmosphering_speed', 'vehicle_class'];\n  const personProperties = ['name', 'gender', 'homeworld', 'birth_year'];\n  const starshipProperties= ['name', 'model', 'manufacturer', 'length', 'max_atmosphering_speed', 'passengers']\n  const details = useSelector(getDetails);\n  const classes = useStyles();\n  const {loading, data} = details;\n\n  if (loading) {\n    return (\n      <h1 className=\"title\">Loading...</h1>\n    )\n  } else {\n    const {vehicles, starships, films} = data;\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item >\n            <Link to='/'>\n              <Button\n              color=\"primary\"\n              startIcon={<ArrowBackIosIcon />}\n              >\n                Back\n              </Button>\n            </Link>\n          </Grid>\n          <Grid item >\n            <Typography variant=\"subtitle1\">\n              Profile:\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={7} >\n            <Card >\n              <CardContent>\n                <ProfileCard properties={personProperties} data={data} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={5} container direction=\"column\" spacing={2}>\n            <Grid item>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <DriveEtaIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Vehicles\" />\n                </ListItem>\n              </List>\n              <Divider />\n              <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                {vehicles.map((vehicle, index) => (\n                  <TransportList properties={vehicleProperties} transport={vehicle} key={index}/>\n                ))}\n              </List>\n            </Grid>\n            <Grid item>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <ListItem button>\n                  <ListItemIcon>\n                    <FlightTakeoffIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Starships\" />\n                </ListItem>\n              </List>\n              <Divider />\n              <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                {starships.map((starship, index) => (\n                  <TransportList properties={starshipProperties} transport={starship} key={index}/>\n                ))}\n              </List>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Card className={classes.root}>\n              <CardContent>\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\n                  Films:\n                </Typography>\n                <ScrollableTabsButtonForce films={films} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport App from \"./pages/App\"\nimport Details from \"./pages/Details/Details\"\n\nexport const MAIN_ROUTE = 'MAIN_ROUTE';\nexport const PEOPLES_DETAILS_ROUTE = 'PEOPLES_DETAILS_ROUTE';\n\nconst routes = [\n  {\n    id: MAIN_ROUTE,\n    path: '/',\n    exact: true,\n    component: App\n  },\n  {\n    id: PEOPLES_DETAILS_ROUTE,\n    path: '/people/:id',\n    exact: true,\n    component: Details\n  }\n];\n\nexport const getRouteConfig = id => {\n  const route = routes.find(route => route.id === id)\n\n  if (route) {\n    const {component, ...rest} = route;\n\n  return rest;\n  }\n}\n\nexport default function Routes() {\n  return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <Switch>\n                {routes.map(route => {\n                  const {id, ...props} = route;\n                  return (\n                    <Route key={id} path={props.path} exact component={props.component} />\n                )})}\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </section>\n  )\n}","import { LOCATION_CHANGE } from 'connected-react-router';\nimport { matchPath } from 'react-router-dom';\nimport { call, apply, put, takeEvery, take, select, fork, takeLatest, delay, all, join } from 'redux-saga/effects';\nimport { getRouteConfig, MAIN_ROUTE, PEOPLES_DETAILS_ROUTE } from '../../../routes';\nimport { LOAD_USERS, LOAD_USERS_SUCCESS, LOAD_FILTERED_USERS } from '../../reducers/people/actions';\nimport { selectPeople } from '../../reducers/people/selectors';\nimport { LOAD_PEOPLE_DEATAILS, LOAD_PEOPLE_DEATAILS_FAILURE, LOAD_PEOPLE_DEATAILS_SUCCESS } from '../../reducers/peopleDetails/actions';\n\nexport function* LoadDataFromArray(data) {\n  let res = null;\n  if (Array.isArray(data)) {\n    res = yield all(data.map(link => {\n    const res = call(LoadSomeDataByPerson, link)\n    return res\n  }))} else {\n    res = yield call(LoadSomeDataByPerson, data)\n  }\n  return res\n};\n\nexport function* LoadSomeDataByPerson(url) {\n  try {\n    const request = yield call(\n      fetch,\n      url\n    )\n    const data = yield apply(request, request.json)\n    return {\n      data,\n      error: false,\n      url\n    }\n  } catch(error) {\n    return {\n      data: null,\n      error: true,\n      url\n    }\n  }\n};\n\nexport function* LoadPeopleDetails({ payload }) {\n  const { id  } = payload;\n  try {\n    const request = yield call(\n    fetch,\n    `https://swapi.dev/api/people/${id}`\n  )\n\n  let data = yield apply(request, request.json)\n  const {films, vehicles, starships, homeworld} = data\n\n  const requestData = yield all([\n    fork(LoadDataFromArray, films),\n    fork(LoadDataFromArray, vehicles),\n    fork(LoadDataFromArray, starships),\n    fork(LoadDataFromArray, homeworld)])\n  \n  const res = yield join(requestData)\n\n  data = {\n    ...data,\n    films: res[0],\n    vehicles: res[1],\n    starships: res[2],\n    homeworld: res[3].data.name\n  }\n\n  yield put({\n    type: LOAD_PEOPLE_DEATAILS_SUCCESS,\n    payload: data\n  })} catch (error) {\n    yield put({\n      type: LOAD_PEOPLE_DEATAILS_FAILURE,\n      payload: error\n    })\n  }\n}\n\nexport function* LoadPeopleList({ payload }) {\n  const { page, search } = payload;\n  const request = yield call(\n    fetch,\n    `https://swapi.dev/api/people?page=${page}&search=${search}`\n    )\n\n    const data = yield apply (request, request.json);\n    yield put ({\n      type: LOAD_USERS_SUCCESS,\n      payload: data\n    })\n}\n\nexport function* LoadFilteredPeopleList({ payload }) {\n  yield delay(500)\n  yield put({\n    type: LOAD_USERS,\n    payload,\n  })\n}\n\nexport function* loadUsersOnRouterEnter() {\n  while (true) {\n    const action = yield take (LOCATION_CHANGE)\n\n    if (matchPath(action.payload.location.pathname, getRouteConfig(MAIN_ROUTE))) {\n      const state = yield select(selectPeople);\n      const { page, search } = state;\n\n      yield put({\n        type: LOAD_USERS,\n        payload: {\n          page, search\n        }\n      })\n    }\n\n    const detailsPage = matchPath(action.payload.location.pathname, getRouteConfig(PEOPLES_DETAILS_ROUTE))\n\n    if (detailsPage) {\n      const {id} = detailsPage.params;\n\n      if (id) {\n        yield put({\n          type: LOAD_PEOPLE_DEATAILS,\n          payload: {\n            id\n          }\n        })\n      }\n    }\n  }\n}\n\nexport default function* peopleSaga() {\n  yield fork (loadUsersOnRouterEnter);\n  yield takeEvery(LOAD_USERS, LoadPeopleList)\n  yield takeLatest(LOAD_FILTERED_USERS, LoadFilteredPeopleList)\n  yield takeEvery(LOAD_PEOPLE_DEATAILS, LoadPeopleDetails)\n};\n","import { all, spawn } from \"redux-saga/effects\";\nimport peopleSaga from \"./people\";\n\nexport default function* rootSaga() {\n  const sagas = [peopleSaga];\n\n  yield all(sagas.map(s => spawn(s)));\n}","import {createStore, applyMiddleware} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {routerMiddleware} from 'connected-react-router'\nimport reducer, {history} from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware,\n        )\n    )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createTheme } from '@material-ui/core/styles';\nimport {ConnectedRouter} from 'connected-react-router'\nimport store from './redux';\nimport {history} from './redux/reducers';\nimport Routes from './routes';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst theme = createTheme();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root') \n);"],"sourceRoot":""}